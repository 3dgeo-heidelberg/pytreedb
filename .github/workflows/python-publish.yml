name: PyPi deploy

on:
  workflow_dispatch:
    inputs:
      deploy_to_testpypi:
        description: "Whether the build should be deployed to test.pypi.org"
        required: true
        default: "false"
      deploy_to_pypi:
        description: "Whether the build should be deployed to pypi.org"
        required: true
        default: "true"


jobs:
  build:
    name: Build source distribution
    defaults:
      run:
        shell: bash -l {0}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: pytreedb
          environment-file: environment.yml
          python-version: 3.9
          auto-activate-base: false

      - name: Install dependencies (PyPi build)
        run: |
          conda activate pytreedb
          python -m pip install --upgrade pip
          pip install build

      - name: Build package (pytreedb)
        run: |
          conda activate pytreedb
          python -m build

      - uses: actions/upload-artifact@v2
        with:
          name: artifact
          path: dist/*.tar.gz

      - name: Build package (pytreedb-server)
        working-directory: ./webserver
        run: |
          conda activate pytreedb
          python -m build

      - uses: actions/upload-artifact@v2
        with:
          name: artifact
          path: ./webserver/dist/*.tar.gz


  test-pytreedb:
    name: Test source distribution (pytreedb) on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: [build]
    strategy:
      matrix:
        os:
          - ubuntu-20.04
          - windows-2022
          - macos-11

    steps:
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: "3.9"

      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - name: Install from source distribution
        shell: bash
        run:
          python -m pip install dist/*.tar.gz

      - name: Install test requirements
        run:
          python -m pip install pytest

      - name: MongoDB in GitHub Actions
        uses: supercharge/mongodb-github-action@1.7.0
        with:
          mongodb-version: ${{ matrix.mongodb-version }}

      - name: Test pytreedb with pytest
        env:
          CONN_URI: "mongodb://127.0.0.1:27017/"
          CONN_DB: "pytreedb"
          CONN_COL: "test"
        run: |
          python -m pytest pytreedb


  test-webserver:
    name: Test source distribution (webserver) on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: [build]
    strategy:
      matrix:
        os:
          - ubuntu-20.04
          - windows-2022
          - macos-11

    steps:
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: "3.9"

      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: ./webserver/dist

      - name: Install from source distribution
        shell: bash
        run:
          python -m pip install ./webserver/dist/*.tar.gz

      - name: Install test requirements
        run:
          python -m pip install pytest
          python -m pip install requests

      - name: MongoDB in GitHub Actions
        uses: supercharge/mongodb-github-action@1.7.0
        with:
          mongodb-version: ${{ matrix.mongodb-version }}

      - name: Test pytreedb-server with pytest
        env:
          CONN_URI: "mongodb://127.0.0.1:27017/"
          CONN_DB: "pytreedb"
          CONN_COL: "test_server"
          FLASK_RUN: "1"
          FLASK_RUN_HOST: "127.0.0.1"
          FLASK_RUN_PORT: "12789"
          PYTREEDB_FILENAME: "pytree.db"
          PYTREEDB_DOWNLOAD: "https://github.com/3dgeo-heidelberg/pytreedb/raw/main/data/test/geojsons.zip"
        run: |
          python -m pytest webserver/pytreedb_server
      - name: Test pytreedb-server ON CLOUD with pytest
        continue-on-error: true
        env:
          CONN_URI: ${{ secrets.CONN_URI }}
          CONN_DB: ${{ secrets.CONN_DB }}
          CONN_COL: "test_server"
          FLASK_RUN: "1"
          FLASK_RUN_HOST: "127.0.0.1"
          FLASK_RUN_PORT: "12789"
          PYTREEDB_FILENAME: "pytree.db"
          PYTREEDB_DOWNLOAD: "https://github.com/3dgeo-heidelberg/pytreedb/raw/main/data/test/geojsons.zip"
        run: |
          python -m pytest webserver/pytreedb_server
      - name: Test pytreedb-server on pytreedb.geog.uni-heidelberg.de with pytest (using SSL)
        continue-on-error: true
        env:
          FLASK_RUN: "0"
          FLASK_RUN_HOST: "https://pytreedb.geog.uni-heidelberg.de"
          FLASK_RUN_PORT: "443"
        run: |
          python -m pytest webserver/pytreedb_server
      - name: Test pytreedb-server on pytreedb.geog.uni-heidelberg.de with pytest (not using SSL)
        continue-on-error: true
        env:
          FLASK_RUN: "0"
          FLASK_RUN_HOST: "http://pytreedb.geog.uni-heidelberg.de"
          FLASK_RUN_PORT: "80"
        run: |
          python -m pytest webserver/pytreedb_server


  upload_testpypi:
    needs: [build, test-pytreedb, test-webserver]
    runs-on: ubuntu-20.04
    if: github.repository_owner == '3dgeo-heidelberg'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - name: Publish package (pytreedb)
        uses: pypa/gh-action-pypi-publish@main
        if: github.event.inputs.deploy_to_testpypi == 'true'
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/

      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: .webserver/dist

      - name: Publish package (webserver)
        uses: pypa/gh-action-pypi-publish@main
        if: github.event.inputs.deploy_to_testpypi == 'true'
        with:
          packages_dir: ./webserver/dist
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/

  upload_pypi:
    needs: [build, test-pytreedb, test-webserver, upload_testpypi]
    runs-on: ubuntu-20.04
    if: github.repository_owner == '3dgeo-heidelberg'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - name: Publish package (pytreedb)
        uses: pypa/gh-action-pypi-publish@main
        if: github.event.inputs.deploy_to_pypi == 'true'
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: .webserver/dist

      - name: Publish package (webserver)
        uses: pypa/gh-action-pypi-publish@main
        if: github.event.inputs.deploy_to_pypi == 'true'
        with:
          packages_dir: ./webserver/dist
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
